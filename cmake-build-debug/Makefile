# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.9

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /home/dmrf/Soft/clion-2017.2.3/bin/cmake/bin/cmake

# The command to remove a file.
RM = /home/dmrf/Soft/clion-2017.2.3/bin/cmake/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/dmrf/文档/Algorithms/Code

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/dmrf/文档/Algorithms/Code/cmake-build-debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/home/dmrf/Soft/clion-2017.2.3/bin/cmake/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/home/dmrf/Soft/clion-2017.2.3/bin/cmake/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/dmrf/文档/Algorithms/Code/cmake-build-debug/CMakeFiles /home/dmrf/文档/Algorithms/Code/cmake-build-debug/CMakeFiles/progress.marks
	$(MAKE) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/dmrf/文档/Algorithms/Code/cmake-build-debug/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named Code

# Build rule for target.
Code: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 Code
.PHONY : Code

# fast build rule for target.
Code/fast:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/build
.PHONY : Code/fast

main.o: main.cpp.o

.PHONY : main.o

# target to build an object file
main.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/main.cpp.o
.PHONY : main.cpp.o

main.i: main.cpp.i

.PHONY : main.i

# target to preprocess a source file
main.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/main.cpp.i
.PHONY : main.cpp.i

main.s: main.cpp.s

.PHONY : main.s

# target to generate assembly for a file
main.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/main.cpp.s
.PHONY : main.cpp.s

分治/BinarySearchRec.o: 分治/BinarySearchRec.cpp.o

.PHONY : 分治/BinarySearchRec.o

# target to build an object file
分治/BinarySearchRec.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/BinarySearchRec.cpp.o
.PHONY : 分治/BinarySearchRec.cpp.o

分治/BinarySearchRec.i: 分治/BinarySearchRec.cpp.i

.PHONY : 分治/BinarySearchRec.i

# target to preprocess a source file
分治/BinarySearchRec.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/BinarySearchRec.cpp.i
.PHONY : 分治/BinarySearchRec.cpp.i

分治/BinarySearchRec.s: 分治/BinarySearchRec.cpp.s

.PHONY : 分治/BinarySearchRec.s

# target to generate assembly for a file
分治/BinarySearchRec.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/BinarySearchRec.cpp.s
.PHONY : 分治/BinarySearchRec.cpp.s

分治/MaxMin.o: 分治/MaxMin.cpp.o

.PHONY : 分治/MaxMin.o

# target to build an object file
分治/MaxMin.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/MaxMin.cpp.o
.PHONY : 分治/MaxMin.cpp.o

分治/MaxMin.i: 分治/MaxMin.cpp.i

.PHONY : 分治/MaxMin.i

# target to preprocess a source file
分治/MaxMin.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/MaxMin.cpp.i
.PHONY : 分治/MaxMin.cpp.i

分治/MaxMin.s: 分治/MaxMin.cpp.s

.PHONY : 分治/MaxMin.s

# target to generate assembly for a file
分治/MaxMin.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/MaxMin.cpp.s
.PHONY : 分治/MaxMin.cpp.s

分治/MergeSort.o: 分治/MergeSort.cpp.o

.PHONY : 分治/MergeSort.o

# target to build an object file
分治/MergeSort.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/MergeSort.cpp.o
.PHONY : 分治/MergeSort.cpp.o

分治/MergeSort.i: 分治/MergeSort.cpp.i

.PHONY : 分治/MergeSort.i

# target to preprocess a source file
分治/MergeSort.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/MergeSort.cpp.i
.PHONY : 分治/MergeSort.cpp.i

分治/MergeSort.s: 分治/MergeSort.cpp.s

.PHONY : 分治/MergeSort.s

# target to generate assembly for a file
分治/MergeSort.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/MergeSort.cpp.s
.PHONY : 分治/MergeSort.cpp.s

分治/QuickSort.o: 分治/QuickSort.cpp.o

.PHONY : 分治/QuickSort.o

# target to build an object file
分治/QuickSort.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/QuickSort.cpp.o
.PHONY : 分治/QuickSort.cpp.o

分治/QuickSort.i: 分治/QuickSort.cpp.i

.PHONY : 分治/QuickSort.i

# target to preprocess a source file
分治/QuickSort.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/QuickSort.cpp.i
.PHONY : 分治/QuickSort.cpp.i

分治/QuickSort.s: 分治/QuickSort.cpp.s

.PHONY : 分治/QuickSort.s

# target to generate assembly for a file
分治/QuickSort.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/QuickSort.cpp.s
.PHONY : 分治/QuickSort.cpp.s

分治/Select.o: 分治/Select.cpp.o

.PHONY : 分治/Select.o

# target to build an object file
分治/Select.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/Select.cpp.o
.PHONY : 分治/Select.cpp.o

分治/Select.i: 分治/Select.cpp.i

.PHONY : 分治/Select.i

# target to preprocess a source file
分治/Select.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/Select.cpp.i
.PHONY : 分治/Select.cpp.i

分治/Select.s: 分治/Select.cpp.s

.PHONY : 分治/Select.s

# target to generate assembly for a file
分治/Select.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/分治/Select.cpp.s
.PHONY : 分治/Select.cpp.s

动态规划/Floyd.o: 动态规划/Floyd.cpp.o

.PHONY : 动态规划/Floyd.o

# target to build an object file
动态规划/Floyd.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Floyd.cpp.o
.PHONY : 动态规划/Floyd.cpp.o

动态规划/Floyd.i: 动态规划/Floyd.cpp.i

.PHONY : 动态规划/Floyd.i

# target to preprocess a source file
动态规划/Floyd.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Floyd.cpp.i
.PHONY : 动态规划/Floyd.cpp.i

动态规划/Floyd.s: 动态规划/Floyd.cpp.s

.PHONY : 动态规划/Floyd.s

# target to generate assembly for a file
动态规划/Floyd.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Floyd.cpp.s
.PHONY : 动态规划/Floyd.cpp.s

动态规划/Knapsack.o: 动态规划/Knapsack.cpp.o

.PHONY : 动态规划/Knapsack.o

# target to build an object file
动态规划/Knapsack.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Knapsack.cpp.o
.PHONY : 动态规划/Knapsack.cpp.o

动态规划/Knapsack.i: 动态规划/Knapsack.cpp.i

.PHONY : 动态规划/Knapsack.i

# target to preprocess a source file
动态规划/Knapsack.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Knapsack.cpp.i
.PHONY : 动态规划/Knapsack.cpp.i

动态规划/Knapsack.s: 动态规划/Knapsack.cpp.s

.PHONY : 动态规划/Knapsack.s

# target to generate assembly for a file
动态规划/Knapsack.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Knapsack.cpp.s
.PHONY : 动态规划/Knapsack.cpp.s

动态规划/Lcs.o: 动态规划/Lcs.cpp.o

.PHONY : 动态规划/Lcs.o

# target to build an object file
动态规划/Lcs.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Lcs.cpp.o
.PHONY : 动态规划/Lcs.cpp.o

动态规划/Lcs.i: 动态规划/Lcs.cpp.i

.PHONY : 动态规划/Lcs.i

# target to preprocess a source file
动态规划/Lcs.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Lcs.cpp.i
.PHONY : 动态规划/Lcs.cpp.i

动态规划/Lcs.s: 动态规划/Lcs.cpp.s

.PHONY : 动态规划/Lcs.s

# target to generate assembly for a file
动态规划/Lcs.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Lcs.cpp.s
.PHONY : 动态规划/Lcs.cpp.s

动态规划/Matchain.o: 动态规划/Matchain.cpp.o

.PHONY : 动态规划/Matchain.o

# target to build an object file
动态规划/Matchain.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Matchain.cpp.o
.PHONY : 动态规划/Matchain.cpp.o

动态规划/Matchain.i: 动态规划/Matchain.cpp.i

.PHONY : 动态规划/Matchain.i

# target to preprocess a source file
动态规划/Matchain.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Matchain.cpp.i
.PHONY : 动态规划/Matchain.cpp.i

动态规划/Matchain.s: 动态规划/Matchain.cpp.s

.PHONY : 动态规划/Matchain.s

# target to generate assembly for a file
动态规划/Matchain.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/动态规划/Matchain.cpp.s
.PHONY : 动态规划/Matchain.cpp.s

回溯算法/8QUEENS.o: 回溯算法/8QUEENS.cpp.o

.PHONY : 回溯算法/8QUEENS.o

# target to build an object file
回溯算法/8QUEENS.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/8QUEENS.cpp.o
.PHONY : 回溯算法/8QUEENS.cpp.o

回溯算法/8QUEENS.i: 回溯算法/8QUEENS.cpp.i

.PHONY : 回溯算法/8QUEENS.i

# target to preprocess a source file
回溯算法/8QUEENS.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/8QUEENS.cpp.i
.PHONY : 回溯算法/8QUEENS.cpp.i

回溯算法/8QUEENS.s: 回溯算法/8QUEENS.cpp.s

.PHONY : 回溯算法/8QUEENS.s

# target to generate assembly for a file
回溯算法/8QUEENS.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/8QUEENS.cpp.s
.PHONY : 回溯算法/8QUEENS.cpp.s

回溯算法/BackTrackRec.o: 回溯算法/BackTrackRec.cpp.o

.PHONY : 回溯算法/BackTrackRec.o

# target to build an object file
回溯算法/BackTrackRec.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/BackTrackRec.cpp.o
.PHONY : 回溯算法/BackTrackRec.cpp.o

回溯算法/BackTrackRec.i: 回溯算法/BackTrackRec.cpp.i

.PHONY : 回溯算法/BackTrackRec.i

# target to preprocess a source file
回溯算法/BackTrackRec.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/BackTrackRec.cpp.i
.PHONY : 回溯算法/BackTrackRec.cpp.i

回溯算法/BackTrackRec.s: 回溯算法/BackTrackRec.cpp.s

.PHONY : 回溯算法/BackTrackRec.s

# target to generate assembly for a file
回溯算法/BackTrackRec.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/BackTrackRec.cpp.s
.PHONY : 回溯算法/BackTrackRec.cpp.s

回溯算法/ColorItre.o: 回溯算法/ColorItre.cpp.o

.PHONY : 回溯算法/ColorItre.o

# target to build an object file
回溯算法/ColorItre.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/ColorItre.cpp.o
.PHONY : 回溯算法/ColorItre.cpp.o

回溯算法/ColorItre.i: 回溯算法/ColorItre.cpp.i

.PHONY : 回溯算法/ColorItre.i

# target to preprocess a source file
回溯算法/ColorItre.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/ColorItre.cpp.i
.PHONY : 回溯算法/ColorItre.cpp.i

回溯算法/ColorItre.s: 回溯算法/ColorItre.cpp.s

.PHONY : 回溯算法/ColorItre.s

# target to generate assembly for a file
回溯算法/ColorItre.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/ColorItre.cpp.s
.PHONY : 回溯算法/ColorItre.cpp.s

回溯算法/ColorRec.o: 回溯算法/ColorRec.cpp.o

.PHONY : 回溯算法/ColorRec.o

# target to build an object file
回溯算法/ColorRec.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/ColorRec.cpp.o
.PHONY : 回溯算法/ColorRec.cpp.o

回溯算法/ColorRec.i: 回溯算法/ColorRec.cpp.i

.PHONY : 回溯算法/ColorRec.i

# target to preprocess a source file
回溯算法/ColorRec.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/ColorRec.cpp.i
.PHONY : 回溯算法/ColorRec.cpp.i

回溯算法/ColorRec.s: 回溯算法/ColorRec.cpp.s

.PHONY : 回溯算法/ColorRec.s

# target to generate assembly for a file
回溯算法/ColorRec.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/回溯算法/ColorRec.cpp.s
.PHONY : 回溯算法/ColorRec.cpp.s

堆和不相交集数据结构——堆/Delete.o: 堆和不相交集数据结构——堆/Delete.cpp.o

.PHONY : 堆和不相交集数据结构——堆/Delete.o

# target to build an object file
堆和不相交集数据结构——堆/Delete.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/Delete.cpp.o
.PHONY : 堆和不相交集数据结构——堆/Delete.cpp.o

堆和不相交集数据结构——堆/Delete.i: 堆和不相交集数据结构——堆/Delete.cpp.i

.PHONY : 堆和不相交集数据结构——堆/Delete.i

# target to preprocess a source file
堆和不相交集数据结构——堆/Delete.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/Delete.cpp.i
.PHONY : 堆和不相交集数据结构——堆/Delete.cpp.i

堆和不相交集数据结构——堆/Delete.s: 堆和不相交集数据结构——堆/Delete.cpp.s

.PHONY : 堆和不相交集数据结构——堆/Delete.s

# target to generate assembly for a file
堆和不相交集数据结构——堆/Delete.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/Delete.cpp.s
.PHONY : 堆和不相交集数据结构——堆/Delete.cpp.s

堆和不相交集数据结构——堆/DeleteMax.o: 堆和不相交集数据结构——堆/DeleteMax.cpp.o

.PHONY : 堆和不相交集数据结构——堆/DeleteMax.o

# target to build an object file
堆和不相交集数据结构——堆/DeleteMax.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/DeleteMax.cpp.o
.PHONY : 堆和不相交集数据结构——堆/DeleteMax.cpp.o

堆和不相交集数据结构——堆/DeleteMax.i: 堆和不相交集数据结构——堆/DeleteMax.cpp.i

.PHONY : 堆和不相交集数据结构——堆/DeleteMax.i

# target to preprocess a source file
堆和不相交集数据结构——堆/DeleteMax.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/DeleteMax.cpp.i
.PHONY : 堆和不相交集数据结构——堆/DeleteMax.cpp.i

堆和不相交集数据结构——堆/DeleteMax.s: 堆和不相交集数据结构——堆/DeleteMax.cpp.s

.PHONY : 堆和不相交集数据结构——堆/DeleteMax.s

# target to generate assembly for a file
堆和不相交集数据结构——堆/DeleteMax.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/DeleteMax.cpp.s
.PHONY : 堆和不相交集数据结构——堆/DeleteMax.cpp.s

堆和不相交集数据结构——堆/HeapSort.o: 堆和不相交集数据结构——堆/HeapSort.cpp.o

.PHONY : 堆和不相交集数据结构——堆/HeapSort.o

# target to build an object file
堆和不相交集数据结构——堆/HeapSort.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/HeapSort.cpp.o
.PHONY : 堆和不相交集数据结构——堆/HeapSort.cpp.o

堆和不相交集数据结构——堆/HeapSort.i: 堆和不相交集数据结构——堆/HeapSort.cpp.i

.PHONY : 堆和不相交集数据结构——堆/HeapSort.i

# target to preprocess a source file
堆和不相交集数据结构——堆/HeapSort.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/HeapSort.cpp.i
.PHONY : 堆和不相交集数据结构——堆/HeapSort.cpp.i

堆和不相交集数据结构——堆/HeapSort.s: 堆和不相交集数据结构——堆/HeapSort.cpp.s

.PHONY : 堆和不相交集数据结构——堆/HeapSort.s

# target to generate assembly for a file
堆和不相交集数据结构——堆/HeapSort.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/HeapSort.cpp.s
.PHONY : 堆和不相交集数据结构——堆/HeapSort.cpp.s

堆和不相交集数据结构——堆/Insert.o: 堆和不相交集数据结构——堆/Insert.cpp.o

.PHONY : 堆和不相交集数据结构——堆/Insert.o

# target to build an object file
堆和不相交集数据结构——堆/Insert.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/Insert.cpp.o
.PHONY : 堆和不相交集数据结构——堆/Insert.cpp.o

堆和不相交集数据结构——堆/Insert.i: 堆和不相交集数据结构——堆/Insert.cpp.i

.PHONY : 堆和不相交集数据结构——堆/Insert.i

# target to preprocess a source file
堆和不相交集数据结构——堆/Insert.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/Insert.cpp.i
.PHONY : 堆和不相交集数据结构——堆/Insert.cpp.i

堆和不相交集数据结构——堆/Insert.s: 堆和不相交集数据结构——堆/Insert.cpp.s

.PHONY : 堆和不相交集数据结构——堆/Insert.s

# target to generate assembly for a file
堆和不相交集数据结构——堆/Insert.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/Insert.cpp.s
.PHONY : 堆和不相交集数据结构——堆/Insert.cpp.s

堆和不相交集数据结构——堆/SIFT-DOWN.o: 堆和不相交集数据结构——堆/SIFT-DOWN.cpp.o

.PHONY : 堆和不相交集数据结构——堆/SIFT-DOWN.o

# target to build an object file
堆和不相交集数据结构——堆/SIFT-DOWN.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/SIFT-DOWN.cpp.o
.PHONY : 堆和不相交集数据结构——堆/SIFT-DOWN.cpp.o

堆和不相交集数据结构——堆/SIFT-DOWN.i: 堆和不相交集数据结构——堆/SIFT-DOWN.cpp.i

.PHONY : 堆和不相交集数据结构——堆/SIFT-DOWN.i

# target to preprocess a source file
堆和不相交集数据结构——堆/SIFT-DOWN.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/SIFT-DOWN.cpp.i
.PHONY : 堆和不相交集数据结构——堆/SIFT-DOWN.cpp.i

堆和不相交集数据结构——堆/SIFT-DOWN.s: 堆和不相交集数据结构——堆/SIFT-DOWN.cpp.s

.PHONY : 堆和不相交集数据结构——堆/SIFT-DOWN.s

# target to generate assembly for a file
堆和不相交集数据结构——堆/SIFT-DOWN.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/SIFT-DOWN.cpp.s
.PHONY : 堆和不相交集数据结构——堆/SIFT-DOWN.cpp.s

堆和不相交集数据结构——堆/SIFT-UP.o: 堆和不相交集数据结构——堆/SIFT-UP.cpp.o

.PHONY : 堆和不相交集数据结构——堆/SIFT-UP.o

# target to build an object file
堆和不相交集数据结构——堆/SIFT-UP.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/SIFT-UP.cpp.o
.PHONY : 堆和不相交集数据结构——堆/SIFT-UP.cpp.o

堆和不相交集数据结构——堆/SIFT-UP.i: 堆和不相交集数据结构——堆/SIFT-UP.cpp.i

.PHONY : 堆和不相交集数据结构——堆/SIFT-UP.i

# target to preprocess a source file
堆和不相交集数据结构——堆/SIFT-UP.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/SIFT-UP.cpp.i
.PHONY : 堆和不相交集数据结构——堆/SIFT-UP.cpp.i

堆和不相交集数据结构——堆/SIFT-UP.s: 堆和不相交集数据结构——堆/SIFT-UP.cpp.s

.PHONY : 堆和不相交集数据结构——堆/SIFT-UP.s

# target to generate assembly for a file
堆和不相交集数据结构——堆/SIFT-UP.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/SIFT-UP.cpp.s
.PHONY : 堆和不相交集数据结构——堆/SIFT-UP.cpp.s

堆和不相交集数据结构——堆/makeheap.o: 堆和不相交集数据结构——堆/makeheap.cpp.o

.PHONY : 堆和不相交集数据结构——堆/makeheap.o

# target to build an object file
堆和不相交集数据结构——堆/makeheap.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/makeheap.cpp.o
.PHONY : 堆和不相交集数据结构——堆/makeheap.cpp.o

堆和不相交集数据结构——堆/makeheap.i: 堆和不相交集数据结构——堆/makeheap.cpp.i

.PHONY : 堆和不相交集数据结构——堆/makeheap.i

# target to preprocess a source file
堆和不相交集数据结构——堆/makeheap.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/makeheap.cpp.i
.PHONY : 堆和不相交集数据结构——堆/makeheap.cpp.i

堆和不相交集数据结构——堆/makeheap.s: 堆和不相交集数据结构——堆/makeheap.cpp.s

.PHONY : 堆和不相交集数据结构——堆/makeheap.s

# target to generate assembly for a file
堆和不相交集数据结构——堆/makeheap.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/堆和不相交集数据结构——堆/makeheap.cpp.s
.PHONY : 堆和不相交集数据结构——堆/makeheap.cpp.s

归纳法/Experc.o: 归纳法/Experc.cpp.o

.PHONY : 归纳法/Experc.o

# target to build an object file
归纳法/Experc.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/Experc.cpp.o
.PHONY : 归纳法/Experc.cpp.o

归纳法/Experc.i: 归纳法/Experc.cpp.i

.PHONY : 归纳法/Experc.i

# target to preprocess a source file
归纳法/Experc.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/Experc.cpp.i
.PHONY : 归纳法/Experc.cpp.i

归纳法/Experc.s: 归纳法/Experc.cpp.s

.PHONY : 归纳法/Experc.s

# target to generate assembly for a file
归纳法/Experc.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/Experc.cpp.s
.PHONY : 归纳法/Experc.cpp.s

归纳法/Horner.o: 归纳法/Horner.cpp.o

.PHONY : 归纳法/Horner.o

# target to build an object file
归纳法/Horner.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/Horner.cpp.o
.PHONY : 归纳法/Horner.cpp.o

归纳法/Horner.i: 归纳法/Horner.cpp.i

.PHONY : 归纳法/Horner.i

# target to preprocess a source file
归纳法/Horner.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/Horner.cpp.i
.PHONY : 归纳法/Horner.cpp.i

归纳法/Horner.s: 归纳法/Horner.cpp.s

.PHONY : 归纳法/Horner.s

# target to generate assembly for a file
归纳法/Horner.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/Horner.cpp.s
.PHONY : 归纳法/Horner.cpp.s

归纳法/MAJORITY.o: 归纳法/MAJORITY.cpp.o

.PHONY : 归纳法/MAJORITY.o

# target to build an object file
归纳法/MAJORITY.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/MAJORITY.cpp.o
.PHONY : 归纳法/MAJORITY.cpp.o

归纳法/MAJORITY.i: 归纳法/MAJORITY.cpp.i

.PHONY : 归纳法/MAJORITY.i

# target to preprocess a source file
归纳法/MAJORITY.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/MAJORITY.cpp.i
.PHONY : 归纳法/MAJORITY.cpp.i

归纳法/MAJORITY.s: 归纳法/MAJORITY.cpp.s

.PHONY : 归纳法/MAJORITY.s

# target to generate assembly for a file
归纳法/MAJORITY.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/MAJORITY.cpp.s
.PHONY : 归纳法/MAJORITY.cpp.s

归纳法/exp.o: 归纳法/exp.cpp.o

.PHONY : 归纳法/exp.o

# target to build an object file
归纳法/exp.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/exp.cpp.o
.PHONY : 归纳法/exp.cpp.o

归纳法/exp.i: 归纳法/exp.cpp.i

.PHONY : 归纳法/exp.i

# target to preprocess a source file
归纳法/exp.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/exp.cpp.i
.PHONY : 归纳法/exp.cpp.i

归纳法/exp.s: 归纳法/exp.cpp.s

.PHONY : 归纳法/exp.s

# target to generate assembly for a file
归纳法/exp.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/归纳法/exp.cpp.s
.PHONY : 归纳法/exp.cpp.s

算法分析基本概念/Binarysearch.o: 算法分析基本概念/Binarysearch.cpp.o

.PHONY : 算法分析基本概念/Binarysearch.o

# target to build an object file
算法分析基本概念/Binarysearch.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/Binarysearch.cpp.o
.PHONY : 算法分析基本概念/Binarysearch.cpp.o

算法分析基本概念/Binarysearch.i: 算法分析基本概念/Binarysearch.cpp.i

.PHONY : 算法分析基本概念/Binarysearch.i

# target to preprocess a source file
算法分析基本概念/Binarysearch.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/Binarysearch.cpp.i
.PHONY : 算法分析基本概念/Binarysearch.cpp.i

算法分析基本概念/Binarysearch.s: 算法分析基本概念/Binarysearch.cpp.s

.PHONY : 算法分析基本概念/Binarysearch.s

# target to generate assembly for a file
算法分析基本概念/Binarysearch.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/Binarysearch.cpp.s
.PHONY : 算法分析基本概念/Binarysearch.cpp.s

算法分析基本概念/BottomUpSort.o: 算法分析基本概念/BottomUpSort.cpp.o

.PHONY : 算法分析基本概念/BottomUpSort.o

# target to build an object file
算法分析基本概念/BottomUpSort.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/BottomUpSort.cpp.o
.PHONY : 算法分析基本概念/BottomUpSort.cpp.o

算法分析基本概念/BottomUpSort.i: 算法分析基本概念/BottomUpSort.cpp.i

.PHONY : 算法分析基本概念/BottomUpSort.i

# target to preprocess a source file
算法分析基本概念/BottomUpSort.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/BottomUpSort.cpp.i
.PHONY : 算法分析基本概念/BottomUpSort.cpp.i

算法分析基本概念/BottomUpSort.s: 算法分析基本概念/BottomUpSort.cpp.s

.PHONY : 算法分析基本概念/BottomUpSort.s

# target to generate assembly for a file
算法分析基本概念/BottomUpSort.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/BottomUpSort.cpp.s
.PHONY : 算法分析基本概念/BottomUpSort.cpp.s

算法分析基本概念/InsertionSort.o: 算法分析基本概念/InsertionSort.cpp.o

.PHONY : 算法分析基本概念/InsertionSort.o

# target to build an object file
算法分析基本概念/InsertionSort.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/InsertionSort.cpp.o
.PHONY : 算法分析基本概念/InsertionSort.cpp.o

算法分析基本概念/InsertionSort.i: 算法分析基本概念/InsertionSort.cpp.i

.PHONY : 算法分析基本概念/InsertionSort.i

# target to preprocess a source file
算法分析基本概念/InsertionSort.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/InsertionSort.cpp.i
.PHONY : 算法分析基本概念/InsertionSort.cpp.i

算法分析基本概念/InsertionSort.s: 算法分析基本概念/InsertionSort.cpp.s

.PHONY : 算法分析基本概念/InsertionSort.s

# target to generate assembly for a file
算法分析基本概念/InsertionSort.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/InsertionSort.cpp.s
.PHONY : 算法分析基本概念/InsertionSort.cpp.s

算法分析基本概念/Linearsearch.o: 算法分析基本概念/Linearsearch.cpp.o

.PHONY : 算法分析基本概念/Linearsearch.o

# target to build an object file
算法分析基本概念/Linearsearch.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/Linearsearch.cpp.o
.PHONY : 算法分析基本概念/Linearsearch.cpp.o

算法分析基本概念/Linearsearch.i: 算法分析基本概念/Linearsearch.cpp.i

.PHONY : 算法分析基本概念/Linearsearch.i

# target to preprocess a source file
算法分析基本概念/Linearsearch.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/Linearsearch.cpp.i
.PHONY : 算法分析基本概念/Linearsearch.cpp.i

算法分析基本概念/Linearsearch.s: 算法分析基本概念/Linearsearch.cpp.s

.PHONY : 算法分析基本概念/Linearsearch.s

# target to generate assembly for a file
算法分析基本概念/Linearsearch.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/Linearsearch.cpp.s
.PHONY : 算法分析基本概念/Linearsearch.cpp.s

算法分析基本概念/Merge.o: 算法分析基本概念/Merge.cpp.o

.PHONY : 算法分析基本概念/Merge.o

# target to build an object file
算法分析基本概念/Merge.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/Merge.cpp.o
.PHONY : 算法分析基本概念/Merge.cpp.o

算法分析基本概念/Merge.i: 算法分析基本概念/Merge.cpp.i

.PHONY : 算法分析基本概念/Merge.i

# target to preprocess a source file
算法分析基本概念/Merge.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/Merge.cpp.i
.PHONY : 算法分析基本概念/Merge.cpp.i

算法分析基本概念/Merge.s: 算法分析基本概念/Merge.cpp.s

.PHONY : 算法分析基本概念/Merge.s

# target to generate assembly for a file
算法分析基本概念/Merge.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/Merge.cpp.s
.PHONY : 算法分析基本概念/Merge.cpp.s

算法分析基本概念/SelectionSort.o: 算法分析基本概念/SelectionSort.cpp.o

.PHONY : 算法分析基本概念/SelectionSort.o

# target to build an object file
算法分析基本概念/SelectionSort.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/SelectionSort.cpp.o
.PHONY : 算法分析基本概念/SelectionSort.cpp.o

算法分析基本概念/SelectionSort.i: 算法分析基本概念/SelectionSort.cpp.i

.PHONY : 算法分析基本概念/SelectionSort.i

# target to preprocess a source file
算法分析基本概念/SelectionSort.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/SelectionSort.cpp.i
.PHONY : 算法分析基本概念/SelectionSort.cpp.i

算法分析基本概念/SelectionSort.s: 算法分析基本概念/SelectionSort.cpp.s

.PHONY : 算法分析基本概念/SelectionSort.s

# target to generate assembly for a file
算法分析基本概念/SelectionSort.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/算法分析基本概念/SelectionSort.cpp.s
.PHONY : 算法分析基本概念/SelectionSort.cpp.s

随机算法/RandomQuickSort.o: 随机算法/RandomQuickSort.cpp.o

.PHONY : 随机算法/RandomQuickSort.o

# target to build an object file
随机算法/RandomQuickSort.cpp.o:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/随机算法/RandomQuickSort.cpp.o
.PHONY : 随机算法/RandomQuickSort.cpp.o

随机算法/RandomQuickSort.i: 随机算法/RandomQuickSort.cpp.i

.PHONY : 随机算法/RandomQuickSort.i

# target to preprocess a source file
随机算法/RandomQuickSort.cpp.i:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/随机算法/RandomQuickSort.cpp.i
.PHONY : 随机算法/RandomQuickSort.cpp.i

随机算法/RandomQuickSort.s: 随机算法/RandomQuickSort.cpp.s

.PHONY : 随机算法/RandomQuickSort.s

# target to generate assembly for a file
随机算法/RandomQuickSort.cpp.s:
	$(MAKE) -f CMakeFiles/Code.dir/build.make CMakeFiles/Code.dir/随机算法/RandomQuickSort.cpp.s
.PHONY : 随机算法/RandomQuickSort.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... rebuild_cache"
	@echo "... edit_cache"
	@echo "... Code"
	@echo "... main.o"
	@echo "... main.i"
	@echo "... main.s"
	@echo "... 分治/BinarySearchRec.o"
	@echo "... 分治/BinarySearchRec.i"
	@echo "... 分治/BinarySearchRec.s"
	@echo "... 分治/MaxMin.o"
	@echo "... 分治/MaxMin.i"
	@echo "... 分治/MaxMin.s"
	@echo "... 分治/MergeSort.o"
	@echo "... 分治/MergeSort.i"
	@echo "... 分治/MergeSort.s"
	@echo "... 分治/QuickSort.o"
	@echo "... 分治/QuickSort.i"
	@echo "... 分治/QuickSort.s"
	@echo "... 分治/Select.o"
	@echo "... 分治/Select.i"
	@echo "... 分治/Select.s"
	@echo "... 动态规划/Floyd.o"
	@echo "... 动态规划/Floyd.i"
	@echo "... 动态规划/Floyd.s"
	@echo "... 动态规划/Knapsack.o"
	@echo "... 动态规划/Knapsack.i"
	@echo "... 动态规划/Knapsack.s"
	@echo "... 动态规划/Lcs.o"
	@echo "... 动态规划/Lcs.i"
	@echo "... 动态规划/Lcs.s"
	@echo "... 动态规划/Matchain.o"
	@echo "... 动态规划/Matchain.i"
	@echo "... 动态规划/Matchain.s"
	@echo "... 回溯算法/8QUEENS.o"
	@echo "... 回溯算法/8QUEENS.i"
	@echo "... 回溯算法/8QUEENS.s"
	@echo "... 回溯算法/BackTrackRec.o"
	@echo "... 回溯算法/BackTrackRec.i"
	@echo "... 回溯算法/BackTrackRec.s"
	@echo "... 回溯算法/ColorItre.o"
	@echo "... 回溯算法/ColorItre.i"
	@echo "... 回溯算法/ColorItre.s"
	@echo "... 回溯算法/ColorRec.o"
	@echo "... 回溯算法/ColorRec.i"
	@echo "... 回溯算法/ColorRec.s"
	@echo "... 堆和不相交集数据结构——堆/Delete.o"
	@echo "... 堆和不相交集数据结构——堆/Delete.i"
	@echo "... 堆和不相交集数据结构——堆/Delete.s"
	@echo "... 堆和不相交集数据结构——堆/DeleteMax.o"
	@echo "... 堆和不相交集数据结构——堆/DeleteMax.i"
	@echo "... 堆和不相交集数据结构——堆/DeleteMax.s"
	@echo "... 堆和不相交集数据结构——堆/HeapSort.o"
	@echo "... 堆和不相交集数据结构——堆/HeapSort.i"
	@echo "... 堆和不相交集数据结构——堆/HeapSort.s"
	@echo "... 堆和不相交集数据结构——堆/Insert.o"
	@echo "... 堆和不相交集数据结构——堆/Insert.i"
	@echo "... 堆和不相交集数据结构——堆/Insert.s"
	@echo "... 堆和不相交集数据结构——堆/SIFT-DOWN.o"
	@echo "... 堆和不相交集数据结构——堆/SIFT-DOWN.i"
	@echo "... 堆和不相交集数据结构——堆/SIFT-DOWN.s"
	@echo "... 堆和不相交集数据结构——堆/SIFT-UP.o"
	@echo "... 堆和不相交集数据结构——堆/SIFT-UP.i"
	@echo "... 堆和不相交集数据结构——堆/SIFT-UP.s"
	@echo "... 堆和不相交集数据结构——堆/makeheap.o"
	@echo "... 堆和不相交集数据结构——堆/makeheap.i"
	@echo "... 堆和不相交集数据结构——堆/makeheap.s"
	@echo "... 归纳法/Experc.o"
	@echo "... 归纳法/Experc.i"
	@echo "... 归纳法/Experc.s"
	@echo "... 归纳法/Horner.o"
	@echo "... 归纳法/Horner.i"
	@echo "... 归纳法/Horner.s"
	@echo "... 归纳法/MAJORITY.o"
	@echo "... 归纳法/MAJORITY.i"
	@echo "... 归纳法/MAJORITY.s"
	@echo "... 归纳法/exp.o"
	@echo "... 归纳法/exp.i"
	@echo "... 归纳法/exp.s"
	@echo "... 算法分析基本概念/Binarysearch.o"
	@echo "... 算法分析基本概念/Binarysearch.i"
	@echo "... 算法分析基本概念/Binarysearch.s"
	@echo "... 算法分析基本概念/BottomUpSort.o"
	@echo "... 算法分析基本概念/BottomUpSort.i"
	@echo "... 算法分析基本概念/BottomUpSort.s"
	@echo "... 算法分析基本概念/InsertionSort.o"
	@echo "... 算法分析基本概念/InsertionSort.i"
	@echo "... 算法分析基本概念/InsertionSort.s"
	@echo "... 算法分析基本概念/Linearsearch.o"
	@echo "... 算法分析基本概念/Linearsearch.i"
	@echo "... 算法分析基本概念/Linearsearch.s"
	@echo "... 算法分析基本概念/Merge.o"
	@echo "... 算法分析基本概念/Merge.i"
	@echo "... 算法分析基本概念/Merge.s"
	@echo "... 算法分析基本概念/SelectionSort.o"
	@echo "... 算法分析基本概念/SelectionSort.i"
	@echo "... 算法分析基本概念/SelectionSort.s"
	@echo "... 随机算法/RandomQuickSort.o"
	@echo "... 随机算法/RandomQuickSort.i"
	@echo "... 随机算法/RandomQuickSort.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

